---
 - name: start services
   hosts: localhost

   vars:
       DOCKER_VERSION: "{{ lookup('env', 'petclinic') }}"

   tasks:
      - name: Terraform Create the infrastructure (init)
        command: chdir=~/final_task/k8s terraform init

      - name: Terraform Create the infrastructure (apply)
        shell: chdir=~/final_task/k8s terraform apply -auto-approve

      - name: Gcloud container clusters get-credentials
        shell: chdir=~/final_task/k8s gcloud container clusters get-credentials $(terraform output -raw kubernetes_cluster_name) --region $(terraform output -raw region)

      - name: Create a k8s namespace
        kubernetes.core.k8s:
          name: 4petclinic
          api_version: v1
          kind: Namespace
          state: present

      - name: Create a Service object
        kubernetes.core.k8s:
          state: present
          definition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              labels:
                app: petclinic
              name: petclinic
              namespace: 4petclinic
            spec:
              replicas: 2
              selector:
                matchLabels:
                  app: petclinic
              template:
                metadata:
                  labels:
                    app: petclinic
                spec:
                  containers:
                  - image: "{{ DOCKER_VERSION }}"
                    name: petclinic
                    ports:
                    - containerPort: 8080

      - name: Create a LoadBalancer
        kubernetes.core.k8s:
          state: present
          definition:
            apiVersion: v1
            kind: Service
            metadata:
              name: petclinic
              namespace: 4petclinic
            spec:
              selector:
                app: petclinic
              ports:
                - port: 8080
                  targetPort: 8080
              type: LoadBalancer
