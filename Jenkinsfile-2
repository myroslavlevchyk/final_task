pipeline {
    agent {
        node {
            label 'slave1'
        }
    }

    parameters {
        choice(choices: '\n\nDeploy environment\nUpdate environment\nDelete environment', description: 'Please select a Service', name: 'choiceServise')
        imageTag(name: 'petclinic', description: 'Please select a DOCKER IMAGE Version (default = latest)', image: '<image name>', defaultTag: 'latest')    
    }

    stages {
        stage('Env FINAL') {
            steps {
                sh 'cd /<PATH>/final_task'
                echo "choiceServise: ${params.choiceServise}"                
                echo "petclinic: ${params.petclinic}"                
            }
        }

        stage('Change') {
            steps {
                script {
                    if (params.choiceServise == 'Deploy environment') 
                        {
                        sh '''                 
                        cd /<PATH>/final_task/
                        ansible-playbook playbook2.yml   
                        echo "PRINT Ansible#2>>> DEPLOY"
                        '''   
                        }
                    if (params.choiceServise == 'Update environment') 
                        {
                        sh '''                        
                        ansible-playbook playbook3.yml                                               
                        echo "PRINT Ansible#3>>> UPDATE"
                        ''' 
                        }
                    if (params.choiceServise == 'Delete environment') 
                        {
                        sh '''                 
                        cd /<PATH>/final_task
                        ansible-playbook playbook4.yml                         
                        echo "PRINT Ansible#4>>> DELETE"
                        '''   
                        }
                    if (params.choiceServise == '')
                        {
                        echo 'Hello from Nothing'
                        }
                    }
            }
        }   
    }
}
